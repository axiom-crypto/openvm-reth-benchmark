[workspace]
members = [
    "bin/host",
    "crates/executor/client",
    "crates/executor/host",
    "crates/primitives",
    "crates/storage/rpc-db",
    "crates/storage/witness-db",
    "crates/host-bench",
]
exclude = []
resolver = "2"

[workspace.package]
edition = "2021"
repository = "https://github.com/moongate-forks/minimal-reth"
homepage = "https://github.com/moongate-forks/minimal-reth"
exclude = ["**/target"]
version = "0.1.0"

[workspace.dependencies]
bincode_derive = "2.0.1"
eyre = "0.6"
tracing = { version = "0.1.40", default-features = false }
cfg-if = "1.0.0"
spin = { version = "0.10.0", features = ["mutex"] }
async-trait = "0.1.80"
tokio = { version = "1.21", default-features = false, features = [
    "rt",
    "rt-multi-thread",
] }
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false, features = ["derive"] }
futures = "0.3"
url = "2.3"
thiserror = "2.0.12"
hex-literal = "1.0.0"
rayon = "1.10.0"
rlp = "0.5.2"
bincode = { version = "2.0.1", default-features = false, features = [
    "derive",
    "alloc",
    "serde",
] }
rustc-hash = "2.1.1"
itertools = "0.14.0"
zerocopy = "0.8.11"

# workspace
openvm-rpc-db = { path = "./crates/storage/rpc-db" }
openvm-witness-db = { path = "./crates/storage/witness-db" }
openvm-client-executor = { path = "./crates/executor/client" }
openvm-host-executor = { path = "./crates/executor/host" }
openvm-primitives = { path = "./crates/primitives" }
openvm-reth-benchmark = { path = "./crates/host-bench", default-features = false }

# reth
reth-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false, features = [
    "alloy-compat",
    "std",
    # "ecrecover", -- maybe we need fork to support it, idk
] }
reth-primitives-traits = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false, features = [
    "std",
] }
reth-codecs = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-evm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-revm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false, features = [
    "std",
    "witness",
] }
reth-node-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-evm-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false, features = [
    "std",
] }
reth-storage-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-storage-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false, features = [
    "std",
] }
reth-trie = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-trie-common = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-chainspec = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-execution-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-execution-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-db = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-ethereum-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }
reth-stateless = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.7", default-features = false }

# revm -- shall be the same version as reth usues
revm = { version = "24.0.1", features = [
    "std",
    "serde",
], default-features = false }
revm-primitives = { version = "19.0.0", features = [
    "std",
    "serde",
], default-features = false }
revm-interpreter = { version = "20.0.0", default-features = false }
revm-inspector = { version = "5.0.1", default-features = false }
# TODO: is it  correct version? Reth doesn't use it
revm-precompile = { version = "21.0.0", default-features = false }

# alloy -- shall be the same version as reth usues
alloy-primitives = { version = "1.1.0", default-features = false }
alloy-rlp = { version = "0.3.10", default-features = false }
alloy-trie = { version = "0.8.1", default-features = false }

alloy-consensus = { version = "1.0.9", default-features = false }
alloy-provider = { version = "1.0.9", default-features = false, features = [
    "reqwest",
    "reqwest-rustls-tls",
    "debug-api",
] }
alloy-rpc-client = { version = "1.0.9", default-features = false, features = [
    "reqwest",
] }
alloy-rpc-types = { version = "1.0.9", default-features = false, features = [
    "eth",
    "trace",
] }
alloy-rpc-types-debug = { version = "1.0.9", default-features = false }
alloy-transport = { version = "1.0.9", default-features = false }
alloy-transport-http = { version = "1.0.9", features = [
    "reqwest-rustls-tls",
], default-features = false }
alloy-eips = { version = "1.0.9", default-features = false }

openvm-stark-sdk = { git = "https://github.com/openvm-org/stark-backend.git", tag = "v1.0.1", default-features = false }
# openvm
# Note: the openvm-sdk commit does not need to be exactly the same as the `openvm` commit used in the guest program: as long as
# the openvm-sdk commit doesn't change any guest libraries, they are compatible
# This allows us to not update revm and openvm-kzg each time we change openvm-sdk
openvm-build = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-benchmarks-prove = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-keccak256-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-keccak256-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-rv32im-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-rv32im-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-bigint-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-bigint-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-algebra-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-algebra-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-ecc-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-ecc-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-pairing-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-sdk = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-native-compiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }
openvm-native-recursion = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.1.2", default-features = false }

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"

[profile.release]
lto = "thin"

[profile.profiling]
inherits = "maxperf"
debug = "full"
strip = "none"

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1

[profile.dev]
opt-level = 3
