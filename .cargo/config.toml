# Copy to config.toml for local patches
[net]
git-fetch-with-cli = true

# [patch."https://github.com/openvm-org/stark-backend.git"]
# openvm-stark-backend = { git = "ssh://git@github.com/openvm-org/stark-backend.git", tag = "v1.0.1" }
# openvm-stark-sdk = { git = "ssh://git@github.com/openvm-org/stark-backend.git", tag = "v1.0.1" }

[patch."https://github.com/openvm-org/openvm.git"]
openvm-benchmarks-prove = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
# OpenVM
openvm-sdk = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
cargo-openvm = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-mod-circuit-builder = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-poseidon2-air = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-circuit-primitives = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-circuit-primitives-derive = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-build = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-instructions = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-instructions-derive = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-macros-common = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-platform = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-circuit-derive = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }

# Extensions
openvm-algebra-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-algebra-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-algebra-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-algebra-moduli-macros = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-algebra-complex-macros = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-bigint-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-bigint-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-bigint-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-ecc-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-ecc-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-ecc-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-ecc-sw-macros = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-keccak256-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-keccak256-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-keccak256-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-sha256-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-sha256-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-sha256-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-native-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-native-compiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-native-compiler-derive = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-native-recursion = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-pairing-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-pairing-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-pairing-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-rv32-adapters = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-rv32im-circuit = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-rv32im-transpiler = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }
openvm-rv32im-guest = { git = "ssh://git@github.com/openvm-org/openvm.git", branch = "feat/new-execution" }

# # Guest Libs
# k256 = { path = "../openvm-org/openvm/guest-libs/k256" }
# p256 = { path = "../openvm-org/openvm/guest-libs/p256" }
# ruint = { path = "../openvm-org/openvm/guest-libs/ruint" }
# openvm-keccak256 = { path = "../openvm-org/openvm/guest-libs/keccak256" }
# openvm-sha2 = { path = "../openvm-org/openvm/guest-libs/sha2" }
# openvm-pairing = { path = "../openvm-org/openvm/guest-libs/pairing" }

# [patch.crates-io]
# k256 = { path = "../openvm-org/openvm/guest-libs/k256" }
# p256 = { path = "../openvm-org/openvm/guest-libs/p256" }
# ruint = { path = "../openvm-org/openvm/guest-libs/ruint" }
# # revm = { path = "../revm/crates/revm" }
# # revm-primitives = { path = "../revm/crates/primitives" }
# # revm-interpreter = { path = "../revm/crates/interpreter" }
# # revm-precompile = { path = "../revm/crates/precompile" }
